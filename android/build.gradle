plugins {
	id 'com.android.application'
	id 'kotlin-android'
	id 'kotlin-android-extensions'
	id 'com.google.gms.google-services'
}

android {
	compileSdkVersion 29

	buildFeatures {

		dataBinding true
		viewBinding true
	}

	sourceSets {
		main {
			manifest.srcFile 'AndroidManifest.xml'
			java.srcDirs = ['src/main/java', 'src/main/kotlin']
			aidl.srcDirs = ['src/main/java', 'src/main/kotlin']
			renderscript.srcDirs = ['src/main/java', 'src/main/kotlin']
			res.srcDirs = ['res']
			assets.srcDirs = ['../assets']
			jniLibs.srcDirs = ['libs']
		}
	}
	packagingOptions {
		// Preventing from license violations (more or less):
		pickFirst 'META-INF/LICENSE.txt'
		pickFirst 'META-INF/LICENSE'
		pickFirst 'META-INF/license.txt'
		pickFirst 'META-INF/LGPL2.1'
		pickFirst 'META-INF/NOTICE.txt'
		pickFirst 'META-INF/NOTICE'
		pickFirst 'META-INF/notice.txt'
		// Excluding unnecessary meta-data:
		exclude 'META-INF/robovm/ios/robovm.xml'
		exclude 'META-INF/DEPENDENCIES.txt'
		exclude 'META-INF/DEPENDENCIES'
		exclude 'META-INF/dependencies.txt'
	}
	defaultConfig {
		applicationId 'com.github.trustworthyblake.ktxGamePrototype01'
		minSdkVersion 26
		targetSdkVersion 29
		versionCode 1
		versionName "1.0"
		multiDexEnabled true
	}
	compileOptions {
		sourceCompatibility "8.0"
		targetCompatibility "8.0"
		coreLibraryDesugaringEnabled true
	}
	kotlinOptions.jvmTarget = "1.8"
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}

}

repositories {
	// needed for AAPT2, may be needed for other tools
	google()
}

configurations { natives }

dependencies {
	implementation 'androidx.wear:wear:1.0.0'
    compileOnly 'com.google.android.wearable:wearable:2.6.0'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.1'
	implementation project(':core')
	implementation "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"




	implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.30"
	implementation 'androidx.core:core-ktx:1.3.2'
	implementation 'androidx.appcompat:appcompat:1.2.0'
	implementation 'com.google.android.material:material:1.3.0'
	implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
	implementation 'com.google.firebase:firebase-auth:20.0.2'
	implementation 'com.google.firebase:firebase-auth-ktx'
	implementation 'com.google.firebase:firebase-firestore:22.0.2'
	implementation platform('com.google.firebase:firebase-bom:26.2.0')
	implementation 'com.google.firebase:firebase-firestore-ktx'
	implementation 'androidx.annotation:annotation:1.1.0'

	implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
	implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
	implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
	implementation 'androidx.legacy:legacy-support-v4:1.0.0'
	implementation 'androidx.fragment:fragment-ktx:1.2.5'

	implementation 'androidx.navigation:navigation-common-ktx:2.3.3'
	implementation 'androidx.navigation:navigation-runtime-ktx:2.3.3'
	implementation 'androidx.navigation:navigation-fragment-ktx:2.3.3'
	implementation 'androidx.navigation:navigation-ui-ktx:2.3.3'

	implementation "androidx.recyclerview:recyclerview:1.1.0"
	implementation "androidx.cardview:cardview:1.0.0"


	testImplementation 'junit:junit:4.13.1'
	androidTestImplementation 'androidx.test.ext:junit:1.1.2'
	androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

	natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"
	natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
	natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
	natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
	natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"
	natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-armeabi"
	natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-armeabi-v7a"
	natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-arm64-v8a"
	natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86"
	natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86_64"

}

// Called every time gradle gets executed, takes the native dependencies of
// the natives configuration, and extracts them to the proper libs/ folders
// so they get packed with the APK.
task copyAndroidNatives() {
	doFirst {
		file("libs/armeabi/").mkdirs()
		file("libs/armeabi-v7a/").mkdirs()
		file("libs/arm64-v8a/").mkdirs()
		file("libs/x86_64/").mkdirs()
		file("libs/x86/").mkdirs()
		
		configurations.getByName("natives").copy().files.each { jar ->
    	    def outputDir = null
    	    if(jar.name.endsWith("natives-arm64-v8a.jar")) outputDir = file("libs/arm64-v8a")
    	    if(jar.name.endsWith("natives-armeabi-v7a.jar")) outputDir = file("libs/armeabi-v7a")
    	    if(jar.name.endsWith("natives-armeabi.jar")) outputDir = file("libs/armeabi")
    	    if(jar.name.endsWith("natives-x86_64.jar")) outputDir = file("libs/x86_64")
    	    if(jar.name.endsWith("natives-x86.jar")) outputDir = file("libs/x86")
    	    if(outputDir != null) {
    	        copy {
    	            from zipTree(jar)
    	            into outputDir
    	            include "*.so"
    	        }
    	    }
    	}
	}
}

tasks.whenTaskAdded { packageTask ->
  if (packageTask.name.contains("package")) {
    packageTask.dependsOn 'copyAndroidNatives'
  }
}

task run(type: Exec) {
	def path
	def localProperties = project.file("../local.properties")
	if (localProperties.exists()) {
		Properties properties = new Properties()
		localProperties.withInputStream { instr ->
			properties.load(instr)
		}
		def sdkDir = properties.getProperty('sdk.dir')
		if (sdkDir) {
			path = sdkDir
		} else {
			path = "$System.env.ANDROID_HOME"
		}
	} else {
		path = "$System.env.ANDROID_HOME"
	}

	def adb = path + "/platform-tools/adb"
	commandLine "$adb", 'shell', 'am', 'start', '-n', 'com.github.TrustworthyBlake.ktxGamePrototype01/com.github.TrustworthyBlake.ktxGamePrototype01.AndroidLauncher'
}

eclipse.project.name = appName + "-android"
